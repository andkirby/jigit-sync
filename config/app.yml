app:
  version: 0.7.0
  config_files:
    base_dir: config
    # Project directory in base_dir. It should contain files with project specifi config
    project_dir: project
    # File with local settings. It should contain JIRA URL and JIRA username
    local: local.yml

  query:
    # Set following query parameters into config by xpath from value
    params_map:
      low: app/git/branch_low
      top: app/git/branch_top
      ver: app/jira/jql/alias/target_fix_version
      in-progress: app/jira/jql/alias/target_fix_version_in_progress
      i: app/jira/jql/alias/target_fix_version_in_progress #alias
      force-remote: app/vcs/remote/force_using
      r: app/vcs/remote/force_using #alias
      debug: app/debug_mode
      d: app/debug_mode #alias
      filter: app/jira/jql/filter_jql
      f: app/jira/jql/filter_jql #alias
      bad-commit: app/vcs/bad_commit_check
      c: app/vcs/bad_commit_check #alias
      simple-view: app/jira/issue/simple_view
      s: app/jira/issue/simple_view #alias

  #Config for branches and versions in VCS
  vcs:
    bad_commit_check: 1
    remote:
      #use remote repository name to identify branch when it does not exist locally
      name: origin
      #force using remote name (usually it has name "origin") even local branch does exist
      force_using: 0
    branch:
      master: master
      develop: develop
      hotfix: hotfix/%s
      release: release/%s
    version:
      prefix: v
      prefix_in_branch:

      #veresion alias for branch (fixVersion=>branch, e.g.: someFixVersion=>custom-branch)
      alias:
        v.develop:
          branch_top: develop
          branch_low: master

    #TODO Implement using git flow settings
    git_flow:
      hotfix: hotfix/
      release: release/
      develop: develop
      master: master

  jira:
    issue:
      simple_view: 0  #if TRUE it will present simple issue output block
      use_fields_list: 1
      fields:
      #Following queries will be used to make query
        - summary
        - assignee
        - reporter
        - versions            #affectedVersion
        - fixVersions         #fixVersion
        - changelog           #Change Log list
        - issuetype           #Issue Type
        - labels              #Labels
        - status              #Issue Status
        - customfield_10600   #Sprint IDs
    jql:
    #JQLs list grouped by action
      action:
        #General report action to identify "problem" issues
        report:
          relasedIssuesMissedFixVersion:
            in_progress: 0
            message: Issues have missed fixVersion or affectedVersion (for reopened issues)
            jql: |
              project = HAS
                AND (
                  key IN (%vcs_keys%)
                  OR
                  issueFunction IN parentsOf(
                    "project = %project% AND key IN (%vcs_keys%)"
                  )
                ) AND (
                  (fixVersion is Empty OR fixVersion != %target_fix_version%)
                  AND
                  (affectedVersion != %target_fix_version% OR affectedVersion is EMPTY)
                )
          inBranchWithoutFixVersion:
            helper: withoutFixVersion
            in_progress: -1
            message: Has no fix version.
            jql: |
              project = %project%
                  AND (
                      (fixVersion != %target_fix_version% OR fixVersion is EMPTY)
                      AND status NOT IN (Open, Reopened, 'In Progress')
                  )
                  AND (
                      (key IN (%vcs_keys%) AND type NOT IN ('Sub-Task Task'))
                      OR
                      (issueFunction IN parentsOf("project = %project% AND key IN (%vcs_keys%)"))
                  )
          notAffectsCodeWithFixVersion:
            helper: notAffectsCode
            in_progress: -1
            message: Issues which did not affect the code.
            jql: |
              project = %project%
              AND fixVersion = %target_fix_version%
              AND key NOT IN (%vcs_keys%)
              AND resolution NOT IN (%not_affects_code_resolutions%)
              AND (labels NOT IN (%not_affects_code_labels%) OR labels IS EMPTY)
              AND type NOT IN ('Change Request', Story, Epic)
          parentIssueHasCommit:
            in_progress: -1
            message: Parent issue has commit.
            jql: |
              project = %project%
                  AND fixVersion = %target_fix_version%
                  AND key IN (%vcs_keys%)
                  AND (type IN ('Change Request', Story, Epic) OR and issueFunction IN hasSubtasks())
          openWithFixVersion:
            in_progress: 1
            message: Open issues for "in progress" fix version.
            jql: |
              project = %project%
              AND status in (Open, Reopened, 'In Progress')
              AND fixVersion = %target_fix_version%
          openSubIssueInResolvedIssue:
            in_progress: 1
            message: Open TOP issues for "in progress" fix version.
            jql: |
              project = %project%
              AND status in (Open, Reopened, 'In Progress')
              AND issueFunction IN parentsOf(
                  "project = %project% AND status NOT IN (Open, Reopened, 'In Progress') AND key IN (%vcs_keys%)"
              )
          inBranchWithoutAffectedVersion:
            in_progress: 0
            message: Parent issue has commit.
            jql: |
              project = %project%
              AND (
                  (affectedVersion != %target_fix_version% OR affectedVersion is EMPTY)
                  AND status IN (Open, Reopened, 'In Progress')
              )
              AND type NOT IN ('Sub-Task Task', 'Sub-Task Question')
              AND key IN (%vcs_keys%)
          notInSprint:
            in_progress: 1
            message: Parent issue has commit.
            jql: |
              project = %project%
              (AND Sprint NOT IN (%active_sprints%) OR Sprint IS EMPTY)
              AND key IN (%vcs_keys%)
        push-tasks: #"push-tasks" action to check and update fixVersion
          issuesHaveNotFixVersion:
            helper: missedFixVersion
            message: Issues which must have fixVersion.
            jql: |
              project = %project%
              AND fixVersion IS EMPTY
              AND status NOT IN (Open, Reopened, 'In Progress', Closed)
              AND issueFunction NOT IN hasSubtasks()
              %top_level_issues%
              %non_dev_issue_types%
          subIssuesHaveNotFixVersion:
#            TODO implement using affectedVersion in making report.
            helper: missedFixVersion
            message: >
              Sub-tasks which added to parent which in a released version.
              They must have fixVersion or have to pushed to proper status.
            jql: |
              project = %project%
              AND issueFunction IN subtasksOf(
                'project = %project%
                AND fixVersion not in (EMPTY)
                AND fixVersion in releasedVersions()
                %default_quoted%'
              )
              AND fixVersion IS EMPTY
              %status_not_done%
              %non_dev_issue_types%

      #JQL aliases which might be used in JQL.
      #To use any alias just put it into JQL and wrap with %.
      #E.g: %fix_version_released%
      #Also you may use quoted alias version with suffix "_quoted" in sub-query for example.
      #E.g.: %default_quoted%
      alias:
        #This is a default JQL alias and will be added authomatically
        default: >
          AND (issuetype != Epic AND 'Epic Link' is EMPTY)
        fix_version_released: >
          AND fixversion in releasedVersions()
        fix_version_unreleased: >
          AND fixversion in unreleasedVersions()
        status_not_done: >
          AND status IN (Open, Reopened, 'In Progress', Resolved, 'Review in Progress', Reviewed)
        top_level_issues: >
          AND type NOT IN ('Sub-Task Task', 'Sub-Task Technical task')
        non_dev_issue_types: >
          AND type NOT IN ('Sub-Task Question', Question, Issue, Risk, Test)
        not_affects_code_resolutions: >
          Cancelled, 'Cannot Reproduce', Declined, Duplicate, 'Not a Bug', 'Not Actual'
        not_affects_code_labels: >
          nocode, fixedIn
